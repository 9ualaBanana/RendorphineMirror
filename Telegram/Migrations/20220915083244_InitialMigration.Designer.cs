// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Telegram.Telegram.Authentication.Services;

#nullable disable

namespace Telegram.Migrations
{
    [DbContext(typeof(AuthenticatedUsersDbContext))]
    [Migration("20220915083244_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("Telegram.Telegram.Authentication.Models.ChatAuthenticationToken", b =>
                {
                    b.Property<long>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MPlusSessionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ChatId");

                    b.HasIndex("MPlusSessionId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Telegram.Telegram.Authentication.Models.MPlusAuthenticationToken", b =>
                {
                    b.Property<string>("SessionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SessionId");

                    b.ToTable("MPlusAuthenticationToken");
                });

            modelBuilder.Entity("Telegram.Telegram.Authentication.Models.ChatAuthenticationToken", b =>
                {
                    b.HasOne("Telegram.Telegram.Authentication.Models.MPlusAuthenticationToken", "MPlus")
                        .WithMany()
                        .HasForeignKey("MPlusSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MPlus");
                });
#pragma warning restore 612, 618
        }
    }
}
