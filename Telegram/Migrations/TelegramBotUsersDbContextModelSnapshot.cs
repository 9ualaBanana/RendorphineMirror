// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Telegram.Infrastructure.Persistence;

#nullable disable

namespace Telegram.Migrations.TelegramBotUsersDb
{
    [DbContext(typeof(TelegramBotDbContext))]
    partial class TelegramBotUsersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Telegram.Infrastructure.Bot.TelegramBot+User+Entity", b =>
                {
                    b.Property<long>("ChatId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChatId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Telegram.Infrastructure.Persistence.MPlusIdentityEntity", b =>
                {
                    b.Property<long>("UserChatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccessLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserChatId");

                    b.ToTable("MPIdentity", (string)null);
                });

            modelBuilder.Entity("Telegram.Infrastructure.Persistence.MPlusIdentityEntity", b =>
                {
                    b.HasOne("Telegram.Infrastructure.Bot.TelegramBot+User+Entity", "TelegramBotUser")
                        .WithOne("MPlusIdentity")
                        .HasForeignKey("Telegram.Infrastructure.Persistence.MPlusIdentityEntity", "UserChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TelegramBotUser");
                });

            modelBuilder.Entity("Telegram.Infrastructure.Bot.TelegramBot+User+Entity", b =>
                {
                    b.Navigation("MPlusIdentity");
                });
#pragma warning restore 612, 618
        }
    }
}
