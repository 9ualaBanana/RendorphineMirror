// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _3DProductsPublish.Turbosquid.Upload;

#nullable disable

namespace _3DProductsPublish.Migrations
{
    [DbContext(typeof(TurboSquid.SaleReports_.DbContext))]
    partial class DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("_3DProductsPublish.Turbosquid.Upload.TurboSquid+UserEntity", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.HasKey("Email")
                        .HasName("Email");

                    b.ToTable("TS_User", (string)null);
                });

            modelBuilder.Entity("_3DProductsPublish.Turbosquid.Upload.TurboSquid+UserEntity", b =>
                {
                    b.OwnsMany("_3DProductsPublish.Turbosquid.Upload.TurboSquid+ScanPeriodEntity", "ScanPeriods", b1 =>
                        {
                            b1.Property<long>("Start")
                                .HasColumnType("INTEGER");

                            b1.Property<long>("End")
                                .HasColumnType("INTEGER");

                            b1.Property<bool>("IsAnalyzed")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER")
                                .HasDefaultValue(false);

                            b1.Property<string>("UserEmail")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("Start", "End");

                            b1.HasIndex("UserEmail");

                            b1.ToTable("TS_ScanPeriod", (string)null);

                            b1.WithOwner("User")
                                .HasForeignKey("UserEmail");

                            b1.Navigation("User");
                        });

                    b.Navigation("ScanPeriods");
                });
#pragma warning restore 612, 618
        }
    }
}
